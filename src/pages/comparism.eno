title: eno in comparism to other formats

# content

-- markdown
# eno in comparism to other formats

One metaphor that I find to describe eno very well is trying to imagine how a
form on a website (something that literally *everyone* with access to a phone or
computer regularly uses and knows how to use) could be technically and visually
represented through a text document instead. But often identity is more easily
founded in difference, so here's some comparism to other wonderful technologies
out there.

## TOML

TOML is an excellent, simple and well specified data de/serialization format,
all aspects considered it is probably the closest kin of eno and its strongest
source of inspiration. It does however differ from eno in one crucial aspect -
It is very clearly directed towards the field of professional computing in that
it for instance limits the character set for keys to merely alphanumeric characters,
effectively locking out the major portion of people on this planet from working with
data and schemas that are defined entirely in their own language, something that
eno explicitly seeks to allow.

<https://github.com/toml-lang/toml>

## ArchieML

ArchieML is a fantastic, specialized language for collaborative, high volume
production of structured text content, which allows developers to parallely
process that content, no matter how syntactically or semantically broken it is
at any given point in the process. eno in comparism is very strict about the
validity of content, while at the same time also incredibly helpful and
informative to resolve all issues, while with ArchieML a non-technical user is
(to my understanding) mostly oblivious to the validity of content, and the
assumption is rather, that technical people are involved in the process which
will figure things out eventually.

<http://archieml.org/>

## YAML

YAML is the most ubiquitous format for writing and storing structured content,
usually in a sort of "proto-programming" stage, as source of configuration,
website metadata, translation register, and so on. Contained within so called
*frontmatter* it made its way into static site generation, serving as a metadata
snippet tucked onto blog posts inside a markdown document. At first glance, any
YAML frontmatter snippet might look identical to eno, but there is more than
meets the eye, and contrary to eno which is pretty much a matter of "what you
see is what you get" there are highly complex rules and an incredibly long
specification behind the facade, making it unfit as *a format for everyone*,
which eno in contrast strives to be.

<http://yaml.org/>

## StrictYAML

StrictYAML, in its pursuit of simplicity and safety is also a very cool and
close relative, however it is still YAML, with indentation, with no possibility
to write multi line content against the natural boundary of the document. It is
also strictly just a python library, and perhaps most importantly and clearly
obvious when looking at the website, targeted towards a technical audience, with
all the conventions, language and assumptions about prior knowledge and cultural
context involved. eno tries to take that awesome technical foundation and make
it more accesible and versatily usable on top of that.

<http://hitchdev.com/strictyaml/>
-- markdown
