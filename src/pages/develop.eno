title: Develop applications and websites with eno

-- markdown
# Overview

## <i class="devicon-javascript-plain javascript-yellow"></i> JavaScript

**enojs v0.10.5**  
[Complete documentation and API reference](https://eno-lang.org/javascript/)  

enojs is already being used in a few select production settings, e.g. at a
vienna-based institute for urban research, where it powers the validation,
processing and editing process for thousands of articles in a completely (eno)
file-based database, for building the message catalogs that power all eno
implementations in the [eno-locales](https://github.com/eno-lang/eno-locales)
repository, as well as, of course, generating the whole eno-lang.org website.

[<i class="devicon-javascript-plain"></i> Package on npm](https://npmjs.com/package/enojs/)  
[<i class="devicon-github-plain"></i> Repository on github](https://github.com/eno-lang/enojs/)

**enojs-exploaders v0.1.3**

A collection of loaders for use with the enojs library, providing out of the box type validation and conversion
for a diverse range of types like `number`, `color`, `boolean`, `float`, `latLng`, `json` and so on.

[<i class="devicon-javascript-plain"></i> Package and documentation on npm](https://www.npmjs.com/package/enojs-exploaders/)  
[<i class="devicon-github-plain"></i> Repository on github](https://github.com/eno-lang/enojs-exploaders/)

##  <i class="devicon-python-plain python-blue"></i> Python

**enopy v0.2.8 Alpha**  
[Complete documentation and API reference](https://eno-lang.org/python/)  

enopy is the most recent library release (first published on PyPI on June 12th),
currently there is only very rudimentary automated test coverage, therefore you
should expect to run into issues, potentially also with core functionality.

[<i class="devicon-python-plain"></i> Package on PyPI](https://pypi.org/project/enopy/)  
[<i class="devicon-github-plain"></i> Repository on github](https://github.com/eno-lang/enopy/)

**enopy-exploaders v0.1.0**

A collection of loaders for use with the enopy library, providing out of the box type validation and conversion
for a diverse range of types like `number`, `color`, `boolean`, `email`, `lat_lng`, `url` and so on.

[<i class="devicon-python-plain"></i> Package and documentation on PyPI](https://pypi.org/project/enopy-exploaders/)  
[<i class="devicon-github-plain"></i> Repository on github](https://github.com/eno-lang/enopy-exploaders/)

## <i class="devicon-ruby-plain ruby-red"></i> Ruby

**enorb v0.4.6 Beta**  
[Complete documentation and API reference](https://eno-lang.org/ruby/)  

enorb's functionality is already covered by an extensive test suite, all basic
functionality should reliably work. Pending full test coverage and a production
case study out in the wild it is likely that there are some minor glitches yet,
in that case bugreports in the github issue tracker are warmly welcome and will
be swiftly acted upon.

[<i class="devicon-ruby-plain"></i> Gem on rubygems](https://rubygems.org/gems/enorb/)  
[<i class="devicon-github-plain"></i> Repository on github](https://github.com/eno-lang/enorb/)

**enorb-exploaders v0.1.1**

A collection of loaders for use with the enorb library, providing out of the box type validation and conversion
for a diverse range of types like `Number`, `Color`, `Boolean`, `Email`, `LatLng`, `Url` and so on.

[<i class="devicon-ruby-plain"></i> Gem and documentation on rubygems](https://rubygems.org/gems/enorb-exploaders/)  
[<i class="devicon-github-plain"></i> Repository on github](https://github.com/eno-lang/enorb-exploaders/)

## Interactive Demos

This is a work in progress effort to showcase different usecases for eno and the
eno libraries as interactive demos in the browser. Right now there is only a
limited selection of early demos and a draft page layout.

[Interactive Demos](https://eno-lang.org/demo/)  

## Roadmap for further implementations

Go, Rust and PHP are likely followups for 2018, but what lands on the definite roadmap will also
depend on your feedback, so make yourself heard if you have suggestions or questions!

## Benchmarks

There is now a benchmark suite that evaluates the performance of all eno libraries, also in comparism
against other popular libraries for parsing yaml and toml.

Visit [github.com/eno-lang/benchmarks](https://github.com/eno-lang/benchmarks/) to study these.

## Dive deeper

Explore all repositories where the development work is currently happening at the eno umbrella organization on github.

[<i class="devicon-github-plain"></i> github.com/eno-lang](https://github.com/eno-lang/)
-- markdown
